// components/Checkout/CheckoutForm.jsx
'use client';

import { useState, useContext } from 'react';
import { ShopContext } from '../ShopContext/ShopContext';
import { useAuth } from '@/components/contexts/AuthContext';
import { useRouter } from 'next/navigation';
import styles from './CheckoutForm.module.css';

export default function CheckoutForm() {
  const { createOrder, cartItems, getTotalCartAmount, getTotalCartItems, all_product } = useContext(ShopContext);
  const { user } = useAuth();
  const router = useRouter();
  
  const [formData, setFormData] = useState({
    fullName: user?.username || '',
    phone: '',
    address: '',
    city: '',
    postalCode: '',
    country: '–†–æ—Å—Å–∏—è',
    shippingMethod: 'pickup',
    paymentMethod: 'cash',
    notes: ''
  });

  const [loading, setLoading] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
  const calculateShipping = () => {
    switch (formData.shippingMethod) {
      case 'pickup':
        return 0;
      case 'courier':
        return 300;
      case 'post':
        return 200;
      default:
        return 0;
    }
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleCheckout = async (e) => {
    e.preventDefault();
    console.log('üõí Starting checkout process...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
    if (getTotalCartItems() === 0) {
      alert('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!');
      return;
    }
    
    setLoading(true);
    
    try {
      // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
      const orderData = {
        customerInfo: {
          username: formData.fullName || user?.username || '–ü–æ–∫—É–ø–∞—Ç–µ–ª—å',
          email: user?.email || '',
          phone: formData.phone
        },
        shippingAddress: {
          fullName: formData.fullName,
          address: formData.address,
          city: formData.city,
          postalCode: formData.postalCode,
          country: formData.country
        },
        shippingMethod: formData.shippingMethod,
        paymentMethod: formData.paymentMethod,
        shippingCost: calculateShipping(),
        customerNotes: formData.notes
      };

      console.log('üì¶ Order data prepared:', orderData);
      console.log('üõí Current cart items:', cartItems);
      
      // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
      const result = await createOrder(orderData);
      console.log('‚úÖ Order creation result:', result);
      
      // –†–µ–¥–∏—Ä–µ–∫—Ç –∏–ª–∏ –ø–æ–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      if (result.success) {
        alert('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
        router.push('/profile');
      } else {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: ' + (result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
      }
    } catch (error) {
      console.error('‚ùå Checkout error:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (getTotalCartItems() === 0) {
    return (
      <div className={styles.emptyCart}>
        <h2>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
        <p>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞</p>
        <button 
          onClick={() => router.push('/parts')}
          className={styles.continueShopping}
        >
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏
        </button>
      </div>
    );
  }

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –∫–æ—Ä–∑–∏–Ω–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const cartProducts = [];
  for (const itemSlug in cartItems) {
    if (cartItems[itemSlug] > 0) {
      const product = all_product.find(p => p.slug === itemSlug);
      if (product) {
        cartProducts.push({
          ...product,
          quantity: cartItems[itemSlug],
          totalPrice: product.new_price * cartItems[itemSlug]
        });
      }
    }
  }

  const totalAmount = getTotalCartAmount() + calculateShipping();

  return (
    <div className={styles.container}>
      <h1 className={styles.title}>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h1>
      
      <div className={styles.checkoutContent}>
        {/* –§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞ */}
        <div className={styles.formSection}>
          <form onSubmit={handleCheckout} className={styles.form}>
            <div className={styles.section}>
              <h2 className={styles.sectionTitle}>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
              
              <div className={styles.formGroup}>
                <label htmlFor="fullName" className={styles.label}>
                  –§–ò–û *
                </label>
                <input
                  id="fullName"
                  name="fullName"
                  type="text"
                  value={formData.fullName}
                  onChange={handleInputChange}
                  className={styles.input}
                  required
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è"
                />
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="phone" className={styles.label}>
                  –¢–µ–ª–µ—Ñ–æ–Ω *
                </label>
                <input
                  id="phone"
                  name="phone"
                  type="tel"
                  value={formData.phone}
                  onChange={handleInputChange}
                  className={styles.input}
                  required
                  placeholder="+7 (XXX) XXX-XX-XX"
                />
              </div>
            </div>

            <div className={styles.section}>
              <h2 className={styles.sectionTitle}>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</h2>
              
              <div className={styles.formGroup}>
                <label htmlFor="address" className={styles.label}>
                  –ê–¥—Ä–µ—Å *
                </label>
                <input
                  id="address"
                  name="address"
                  type="text"
                  value={formData.address}
                  onChange={handleInputChange}
                  className={styles.input}
                  required
                  placeholder="–£–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                />
              </div>

              <div className={styles.formRow}>
                <div className={styles.formGroup}>
                  <label htmlFor="city" className={styles.label}>
                    –ì–æ—Ä–æ–¥ *
                  </label>
                  <input
                    id="city"
                    name="city"
                    type="text"
                    value={formData.city}
                    onChange={handleInputChange}
                    className={styles.input}
                    required
                    placeholder="–ì–æ—Ä–æ–¥"
                  />
                </div>

                <div className={styles.formGroup}>
                  <label htmlFor="postalCode" className={styles.label}>
                    –ò–Ω–¥–µ–∫—Å
                  </label>
                  <input
                    id="postalCode"
                    name="postalCode"
                    type="text"
                    value={formData.postalCode}
                    onChange={handleInputChange}
                    className={styles.input}
                    placeholder="–ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å"
                  />
                </div>
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="country" className={styles.label}>
                  –°—Ç—Ä–∞–Ω–∞
                </label>
                <select
                  id="country"
                  name="country"
                  value={formData.country}
                  onChange={handleInputChange}
                  className={styles.select}
                >
                  <option value="–†–æ—Å—Å–∏—è">–†–æ—Å—Å–∏—è</option>
                  <option value="–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω">–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω</option>
                  <option value="–ë–µ–ª–∞—Ä—É—Å—å">–ë–µ–ª–∞—Ä—É—Å—å</option>
                </select>
              </div>
            </div>

            <div className={styles.section}>
              <h2 className={styles.sectionTitle}>–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏</h2>
              
              <div className={styles.radioGroup}>
                <label className={styles.radioLabel}>
                  <input
                    type="radio"
                    name="shippingMethod"
                    value="pickup"
                    checked={formData.shippingMethod === 'pickup'}
                    onChange={handleInputChange}
                    className={styles.radioInput}
                  />
                  <span className={styles.radioText}>
                    <strong>–°–∞–º–æ–≤—ã–≤–æ–∑</strong>
                    <span>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
                  </span>
                </label>

                <label className={styles.radioLabel}>
                  <input
                    type="radio"
                    name="shippingMethod"
                    value="courier"
                    checked={formData.shippingMethod === 'courier'}
                    onChange={handleInputChange}
                    className={styles.radioInput}
                  />
                  <span className={styles.radioText}>
                    <strong>–ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</strong>
                    <span>300‚ÇΩ</span>
                  </span>
                </label>

                <label className={styles.radioLabel}>
                  <input
                    type="radio"
                    name="shippingMethod"
                    value="post"
                    checked={formData.shippingMethod === 'post'}
                    onChange={handleInputChange}
                    className={styles.radioInput}
                  />
                  <span className={styles.radioText}>
                    <strong>–ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏</strong>
                    <span>200‚ÇΩ</span>
                  </span>
                </label>
              </div>
            </div>

            <div className={styles.section}>
              <h2 className={styles.sectionTitle}>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h2>
              
              <div className={styles.radioGroup}>
                <label className={styles.radioLabel}>
                  <input
                    type="radio"
                    name="paymentMethod"
                    value="cash"
                    checked={formData.paymentMethod === 'cash'}
                    onChange={handleInputChange}
                    className={styles.radioInput}
                  />
                  <span className={styles.radioText}>
                    <strong>–ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</strong>
                  </span>
                </label>

                <label className={styles.radioLabel}>
                  <input
                    type="radio"
                    name="paymentMethod"
                    value="card"
                    checked={formData.paymentMethod === 'card'}
                    onChange={handleInputChange}
                    className={styles.radioInput}
                  />
                  <span className={styles.radioText}>
                    <strong>–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π –æ–Ω–ª–∞–π–Ω</strong>
                  </span>
                </label>
              </div>
            </div>

            <div className={styles.section}>
              <h2 className={styles.sectionTitle}>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É</h2>
              
              <div className={styles.formGroup}>
                <textarea
                  name="notes"
                  value={formData.notes}
                  onChange={handleInputChange}
                  className={styles.textarea}
                  rows={4}
                  placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∫ –∑–∞–∫–∞–∑—É..."
                />
              </div>
            </div>

            <button 
              type="submit" 
              className={styles.submitButton}
              disabled={loading}
            >
              {loading ? '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞...' : `–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ - ${totalAmount}‚ÇΩ`}
            </button>
          </form>
        </div>

        {/* –°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–∞ */}
        <div className={styles.summarySection}>
          <div className={styles.summaryCard}>
            <h3 className={styles.summaryTitle}>–í–∞—à –∑–∞–∫–∞–∑</h3>
            
            <div className={styles.productsList}>
              {cartProducts.map((product, index) => (
                <div key={index} className={styles.productItem}>
                  <div className={styles.productImage}>
                    {product.images && product.images[0] && (
                      <img 
                        src={product.images[0]} 
                        alt={product.name}
                        className={styles.image}
                      />
                    )}
                  </div>
                  <div className={styles.productInfo}>
                    <div className={styles.productName}>{product.name}</div>
                    <div className={styles.productDetails}>
                      {product.quantity} √ó {product.new_price}‚ÇΩ
                    </div>
                  </div>
                  <div className={styles.productTotal}>
                    {product.totalPrice}‚ÇΩ
                  </div>
                </div>
              ))}
            </div>

            <div className={styles.summaryDetails}>
              <div className={styles.summaryRow}>
                <span>–°—É–º–º–∞ —Ç–æ–≤–∞—Ä–æ–≤:</span>
                <span>{getTotalCartAmount()}‚ÇΩ</span>
              </div>
              
              <div className={styles.summaryRow}>
                <span>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                <span>{calculateShipping()}‚ÇΩ</span>
              </div>
              
              <div className={styles.summaryRowTotal}>
                <span>–ò—Ç–æ–≥–æ:</span>
                <span>{totalAmount}‚ÇΩ</span>
              </div>
            </div>

            <div className={styles.cartInfo}>
              <div className={styles.cartItemCount}>
                {getTotalCartItems()} —Ç–æ–≤–∞—Ä(–∞)
              </div>
              <button 
                onClick={() => router.push('/cart')}
                className={styles.editCartButton}
              >
                –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}