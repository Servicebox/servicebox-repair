// app/api/cart/route.js
import { NextResponse } from 'next/server';
import { getServerSession } from '@/lib/session';
import ProductReservation from '@/models/ProductReservation';
import dbConnect from '@/lib/db';

export async function GET(request) {
  try {
    await dbConnect();
    
    const session = await getServerSession(request);
    if (!session) {
      return NextResponse.json({ cart: {} }, { status: 200 });
    }

    console.log('üõí Fetching cart for user:', session.userId);
    
    // –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const reservations = await ProductReservation.find({
      userId: session.userId,
      status: 'reserved',
      expiresAt: { $gt: new Date() }
    });

    console.log(`üì¶ Found ${reservations.length} reservations`);

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ productSlug
    const cart = {};
    reservations.forEach(reservation => {
      if (reservation.productSlug) {
        cart[reservation.productSlug] = reservation.quantity;
        console.log(`‚ûï Added to cart: ${reservation.productSlug} - ${reservation.quantity}`);
      }
    });

    console.log('‚úÖ Final cart:', cart);
    return NextResponse.json({ cart });
  } catch (error) {
    console.error('‚ùå Error fetching cart:', error);
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ—Ä–∑–∏–Ω—ã: ' + error.message },
      { status: 500 }
    );
  }
}